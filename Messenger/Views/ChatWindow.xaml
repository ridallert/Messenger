<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:controls="clr-namespace:Messenger.Resources"
             xmlns:local="clr-namespace:Messenger.Views" x:Class="Messenger.Views.ChatWindow"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Style="{StaticResource ChatWindowStyle}">

    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
        <KeyBinding Key="Enter" Modifiers="Shift" Command="{Binding NewLineCommand}"/>
    </UserControl.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>

            <ListBox x:Name="contactsListBox"
                     Grid.Row="1"
                     Margin="10,5,5,5"
                     ItemsSource="{Binding ChatList}"
                     HorizontalContentAlignment="Stretch"
                     SelectedItem="{Binding SelectedChat, UpdateSourceTrigger=PropertyChanged}" >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Title}"
                                           FontWeight="Bold" />
                                <TextBlock Margin="10,0,0,0"
                                           Foreground="CadetBlue"
                                           Text="{Binding NewMessageCounter, StringFormat=+\{0\}, TargetNullValue=''}"/>
                            </StackPanel>
                            <TextBlock Text="{Binding IsOnline}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ToggleButton Name="startNewChatButton"
                          Content="{Binding StartNewChatButtonName}"
                          Grid.Row="2"
                          Margin="10,5,5,10"
                          IsChecked="{Binding IsPublicChatActive, UpdateSourceTrigger=PropertyChanged}"
                          Command="{Binding StartNewChatCommand}"/>
            <!--CommandParameter="{Binding SelectedItems, Mode=OneWay, ElementName=startNewChatListBox}"-->
            <!--<Popup AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=startNewChatButton}"
                   Placement="Top"
                   PopupAnimation="Slide"
                   IsOpen="{Binding Path=IsPopupOpen, Mode=OneWay}">
                
                <ListBox x:Name="startNewChatListBox"
                         Height="150"
                         Width="185"
                         SelectionMode="Multiple"
                         ItemsSource="{Binding ContactList, UpdateSourceTrigger=PropertyChanged}">

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold"
                                       TextAlignment="Left"
                                       Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Popup>-->
            <!--Command="{Binding CreateNewChatCommand}"/>-->
        </Grid>

        <DockPanel LastChildFill="True" Grid.Column="1">

            <!--<TextBlock Height="30"
                       DockPanel.Dock="Top"
                       Margin="5,10,10,5"
                       VerticalAlignment="Stretch">
                <Run Text="{Binding Path=Login, StringFormat=You are logged in as {0}, TargetNullValue=''}"/>
                
            </TextBlock>-->

            <Label x:Name="meLabel"
                   Height="30"
                   Margin="5,10,5,5"
                   ContentStringFormat="You are logged in as {0}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   DockPanel.Dock="Top"
                   Content="{Binding Login, UpdateSourceTrigger=PropertyChanged}"/>

            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>

                <controls:CustomTextBox x:Name="messageTextBox"
                                        MinHeight="30"
                                        MaxHeight="100"
                                        Margin="5,5,5,10"
                                        TextWrapping="Wrap"
                                        Grid.Column="0"
                                        Text="{Binding NewMessage, UpdateSourceTrigger=PropertyChanged}"
                                        CaretPosition="{Binding CaretPosition}"
                                        SpellCheck.IsEnabled="True" Language="ru-ru"/>

                <DockPanel Grid.Column="1" LastChildFill="False">
                    <Button x:Name="sendButton"
                        Height="30"
                        Content="Send"
                        Margin="5,5,10,10"
                        Grid.Column="1"
                        DockPanel.Dock="Bottom"
                        Command="{Binding SendMessageCommand}"/>
                </DockPanel>
            </Grid>

            <ListBox x:Name="mainTextBox"
                     Margin="5,5,10,5"
                     HorizontalContentAlignment="Stretch"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemsSource="{Binding MessageList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsHitTestVisible"  Value="False"/>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="0"
                                       FontWeight="Bold"
                                       TextAlignment="Left"
                                       Text="{Binding Sender.Name, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="0"
                                       Margin="30,0,0,0"
                                       FontStyle="Italic"
                                       TextAlignment="Right"
                                       Text="{Binding SendTime, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Column="0"
                                       Grid.Row="1"
                                       Grid.ColumnSpan="2"
                                       TextWrapping="Wrap"
                                       Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </DockPanel>
    </Grid>

</UserControl>
